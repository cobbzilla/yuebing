// DO NOT EDIT THIS FILE. AUTO-GENERATED BY mobiletto-orm-typedef-gen

import { Ref } from "vue";
import { MobilettoOrmObject, MobilettoOrmPurgeResults, MobilettoOrmValidationErrors } from "mobiletto-orm-typedef";
import { SourceScanType, SourceScanTypeDef } from "yuebing-model";
import * as a from "~/utils/model/serviceHelper.js";

export const sourceScanService = {
  searchSourceScan,
  findSourceScan,
  createSourceScan,
  updateSourceScan,
  deleteSourceScan,
};

function searchSourceScan(query?: MobilettoOrmFindApiOpts): Promise<SourceScanType[]> {
  return $fetch("/api/model/sourceScan", a.authPostJson(query)).then(a.handleJsonResponse<SourceScanType[]>);
}

function findSourceScan(
  id: string,
  serverErrors: Ref<MobilettoOrmValidationErrors>,
): Promise<SourceScanType> {
  return $fetch(`/api/model/sourceScan/${id}`, a.authGet())
    .then(a.handleJsonResponse<SourceScanType>)
    .catch(a.handleErrors(serverErrors)) as Promise<SourceScanType>;
}

function createSourceScan(
  sourceScan: SourceScanType,
  serverErrors: Ref<MobilettoOrmValidationErrors>,
): Promise<SourceScanType> {
  const id = SourceScanTypeDef.id(sourceScan);
  return $fetch(`/api/model/sourceScan/${id}`, a.authPutJson(sourceScan))
    .then(a.handleJsonResponse<SourceScanType>)
    .catch(a.handleErrors(serverErrors)) as Promise<SourceScanType>;
}

function updateSourceScan(
  sourceScan: SourceScanType,
  serverErrors: Ref<MobilettoOrmValidationErrors>,
): Promise<SourceScanType> {
  const id = SourceScanTypeDef.id(sourceScan);
  return $fetch(`/api/model/sourceScan/${id}`, a.authPatchJson(sourceScan))
    .then(a.handleJsonResponse<SourceScanType>)
    .catch(a.handleErrors(serverErrors)) as Promise<SourceScanType>;
}

function deleteSourceScan(
  id: string,
  serverErrors: Ref<MobilettoOrmValidationErrors>,
  purge?: boolean
): Promise<MobilettoOrmObject | MobilettoOrmPurgeResults> {
  return $fetch(`/api/model/sourceScan/${id}/${purge ? `?purge=${purge}` : ""}`, a.authDelete())
    .then(a.handleJsonResponse<MobilettoOrmObject | MobilettoOrmPurgeResults>)
    .catch(a.handleErrors(serverErrors)) as Promise<SourceScanType>;
}
