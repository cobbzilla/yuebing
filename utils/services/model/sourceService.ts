// DO NOT EDIT THIS FILE. AUTO-GENERATED BY mobiletto-orm-typedef-gen

import { MobilettoOrmObject, MobilettoOrmPurgeResults } from "mobiletto-orm";
import { SourceType, SourceTypeDef } from "yuebing-model";
import * as a from "~/utils/services/api";

export const sourceService = {
  searchSource,
  findSource,
  createSource,
  updateSource,
  deleteSource,
};

function searchSource(query?: MobilettoOrmFindApiOpts): Promise<SourceType[]> {
  return $fetch("/api/model/source", a.authPostJson(query)).then(a.handleJsonResponse<SourceType[]>);
}

function findSource(id: string): Promise<SourceType> {
  return $fetch(`/api/model/source/${id}`, a.authGet()).then(a.handleJsonResponse<SourceType>);
}

function createSource(source: SourceType): Promise<SourceType> {
  const id = SourceTypeDef.id(source);
  return $fetch(`/api/model/source/${id}`, a.authPutJson(source)).then(a.handleJsonResponse<SourceType>);
}

function updateSource(source: SourceType): Promise<SourceType> {
  const id = SourceTypeDef.id(source);
  return $fetch(`/api/model/source/${id}`, a.authPostJson(source)).then(a.handleJsonResponse<SourceType>);
}

function deleteSource(id: string, purge?: boolean): Promise<MobilettoOrmObject | MobilettoOrmPurgeResults> {
  return $fetch(`/api/model/source/${id}/${purge ? `?purge=${purge}` : ""}`, a.authDelete()).then(
    a.handleJsonResponse<MobilettoOrmObject | MobilettoOrmPurgeResults>,
  );
}
