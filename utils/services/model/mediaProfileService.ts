// DO NOT EDIT THIS FILE. AUTO-GENERATED BY mobiletto-orm-typedef-gen

import { Ref } from "vue";
import { MobilettoOrmObject, MobilettoOrmPurgeResults, MobilettoOrmValidationErrors } from "mobiletto-orm-typedef";
import { MediaProfileType, MediaProfileTypeDef } from "yuebing-model";
import * as a from "~/utils/model/serviceHelper.js";

export const mediaProfileService = {
  searchMediaProfile,
  findMediaProfile,
  createMediaProfile,
  updateMediaProfile,
  deleteMediaProfile,
};

function searchMediaProfile(query?: MobilettoOrmFindApiOpts): Promise<MediaProfileType[]> {
  return $fetch("/api/model/mediaProfile", a.authPostJson(query)).then(a.handleJsonResponse<MediaProfileType[]>);
}

function findMediaProfile(
  id: string,
  serverErrors: Ref<MobilettoOrmValidationErrors>,
): Promise<MediaProfileType> {
  return $fetch(`/api/model/mediaProfile/${id}`, a.authGet())
    .then(a.handleJsonResponse<MediaProfileType>)
    .catch(a.handleErrors(serverErrors)) as Promise<MediaProfileType>;
}

function createMediaProfile(
  mediaProfile: MediaProfileType,
  serverErrors: Ref<MobilettoOrmValidationErrors>,
): Promise<MediaProfileType> {
  const id = MediaProfileTypeDef.id(mediaProfile);
  return $fetch(`/api/model/mediaProfile/${id}`, a.authPutJson(mediaProfile))
    .then(a.handleJsonResponse<MediaProfileType>)
    .catch(a.handleErrors(serverErrors)) as Promise<MediaProfileType>;
}

function updateMediaProfile(
  mediaProfile: MediaProfileType,
  serverErrors: Ref<MobilettoOrmValidationErrors>,
): Promise<MediaProfileType> {
  const id = MediaProfileTypeDef.id(mediaProfile);
  return $fetch(`/api/model/mediaProfile/${id}`, a.authPatchJson(mediaProfile))
    .then(a.handleJsonResponse<MediaProfileType>)
    .catch(a.handleErrors(serverErrors)) as Promise<MediaProfileType>;
}

function deleteMediaProfile(
  id: string,
  serverErrors: Ref<MobilettoOrmValidationErrors>,
  purge?: boolean
): Promise<MobilettoOrmObject | MobilettoOrmPurgeResults> {
  return $fetch(`/api/model/mediaProfile/${id}/${purge ? `?purge=${purge}` : ""}`, a.authDelete())
    .then(a.handleJsonResponse<MobilettoOrmObject | MobilettoOrmPurgeResults>)
    .catch(a.handleErrors(serverErrors)) as Promise<MediaProfileType>;
}
