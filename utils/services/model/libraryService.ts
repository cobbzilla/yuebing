// DO NOT EDIT THIS FILE. AUTO-GENERATED BY mobiletto-orm-typedef-gen

import { MobilettoOrmObject, MobilettoOrmPurgeResults } from "mobiletto-orm";
import { LibraryType, LibraryTypeDef } from "yuebing-model";
import * as a from "~/utils/services/api";

export const libraryService = {
  searchLibrary,
  findLibrary,
  createLibrary,
  updateLibrary,
  deleteLibrary,
};

function searchLibrary(query?: MobilettoOrmFindApiOpts): Promise<LibraryType[]> {
  return $fetch("/api/model/library", a.authPostJson(query)).then(a.handleJsonResponse<LibraryType[]>);
}

function findLibrary(id: string): Promise<LibraryType> {
  return $fetch(`/api/model/library/${id}`, a.authGet()).then(a.handleJsonResponse<LibraryType>);
}

function createLibrary(library: LibraryType): Promise<LibraryType> {
  const id = LibraryTypeDef.id(library);
  return $fetch(`/api/model/library/${id}`, a.authPutJson(library)).then(a.handleJsonResponse<LibraryType>);
}

function updateLibrary(library: LibraryType): Promise<LibraryType> {
  const id = LibraryTypeDef.id(library);
  return $fetch(`/api/model/library/${id}`, a.authPostJson(library)).then(a.handleJsonResponse<LibraryType>);
}

function deleteLibrary(id: string, purge?: boolean): Promise<MobilettoOrmObject | MobilettoOrmPurgeResults> {
  return $fetch(`/api/model/library/${id}/${purge ? `?purge=${purge}` : ""}`, a.authDelete()).then(
    a.handleJsonResponse<MobilettoOrmObject | MobilettoOrmPurgeResults>,
  );
}
