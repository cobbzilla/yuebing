// DO NOT EDIT THIS FILE. AUTO-GENERATED BY mobiletto-orm-typedef-gen

import { defineStore } from "pinia";
import { SourceType, SourceTypeDef } from "yuebing-model";
import { sourceService } from "~/utils/services/model/sourceService";

const updateList = (list: SourceType[] | null, id: string, remove?: { remove?: boolean }) => {
  if (list) {
    const foundIndex = list.findIndex((e) => SourceTypeDef.id(e) === id);
    if (foundIndex && foundIndex >= 0) {
      if (remove && remove.remove === true) {
        list.splice(foundIndex, 1);
      } else {
        list.splice(foundIndex, 1, this.source);
      }
    }
  }
};

export const useSourceStore = defineStore("source", {
  state: () => ({
    source: null as SourceType | null,
    sourceList: null as SourceType[] | null,
  }),
  actions: {
    async sourceLookup(id: string): Promise<void> {
      this.source = await sourceService.findSource(id);
      updateList(this.sourceList, SourceTypeDef.id(this.source));
    },
    async sourceSearch(query?: MobilettoOrmFindApiOpts): Promise<void> {
      this.sourceList = await sourceService.searchSource(query);
    },
    async sourceCreate(source: SourceType): Promise<void> {
      this.source = await sourceService.createSource(source);
      updateList(this.sourceList, SourceTypeDef.id(this.source));
    },
    async sourceUpdate(source: SourceType): Promise<void> {
      this.source = await sourceService.updateSource(source);
      updateList(this.sourceList, SourceTypeDef.id(this.source));
    },
    async sourceDelete(source: string): Promise<void> {
      await sourceService.deleteSource(source);
      updateList(this.sourceList, source, { remove: true });
    },
  },
});
