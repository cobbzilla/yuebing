// DO NOT EDIT THIS FILE. AUTO-GENERATED BY mobiletto-orm-typedef-gen

import { defineStore } from "pinia";
import { AccountType, AccountTypeDef } from "yuebing-model";
import { accountService } from "~/utils/services/model/accountService";

const updateList = (list: AccountType[] | null, id: string, opts?: { account?: AccountType, remove?: boolean }) => {
  if (!opts) return;
  if (list) {
    const foundIndex = list.findIndex((e) => AccountTypeDef.id(e) === id);
    if (foundIndex && foundIndex >= 0) {
      if (opts && opts.remove === true) {
        list.splice(foundIndex, 1);
      } else if (opts && opts.account) {
        list.splice(foundIndex, 1, opts.account);
      }
    }
  }
};

export const useAccountStore = defineStore("account", {
  state: () => ({
    account: null as AccountType | null,
    accountList: null as AccountType[] | null,
  }),
  actions: {
    async accountLookup(id: string): Promise<AccountType> {
      this.account = await accountService.findAccount(id);
      updateList(this.accountList, AccountTypeDef.id(this.account), { account: this.account });
      return this.account;
    },
    async accountSearch(query?: MobilettoOrmFindApiOpts): Promise<AccountType[]> {
      this.accountList = await accountService.searchAccount(query);
      return this.accountList || [];
    },
    async accountCreate(account: AccountType): Promise<AccountType> {
      this.account = await accountService.createAccount(account);
      return this.account;
    },
    async accountUpdate(account: AccountType): Promise<AccountType> {
      this.account = await accountService.updateAccount(account);
      updateList(this.accountList, AccountTypeDef.id(this.account), { account: this.account });
      return this.account;
    },
    async accountDelete(account: string): Promise<boolean> {
      await accountService.deleteAccount(account);
      updateList(this.accountList, account, { remove: true });
      return true;
    },
  },
});
